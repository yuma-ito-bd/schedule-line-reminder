AWSTemplateFormatVersion: 2010-09-09
Description: >-
  schedule-line-reminder
Transform:
  - AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # This is the Lambda function definition associated with the source code: sqs-payload-logger.js. For all available properties, see
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  CalendarEventsNotifier:
    Type: AWS::Serverless::Function
    Properties:
      Description: Googleカレンダーの1週間分の予定を通知するLambda関数
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Handler: calendar-events-handler.calendarEventsHandler
      # This property associates this Lambda function with a scheduled CloudWatch Event. For all available properties, see
      # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#schedule
      Events:
        CloudWatchEvent:
          Type: Schedule
          Properties:
            # 10分ごとに実行する
            Schedule: cron(0/10 * * * ? *)
      MemorySize: 128
      Timeout: 100
      Layers:
        # AWS Systems Managerのパラメータストアから設定値を取得するためのLambda Layer
        - arn:aws:lambda:ap-northeast-1:133490724326:layer:AWS-Parameters-and-Secrets-Lambda-Extension:12
      Policies:
        - AWSLambdaBasicExecutionRole
        # AWS Systems Managerのパラメータストアから設定値を取得するためのポリシー
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "kms:Decrypt"
                - "ssm:GetParameter"
              Resource:
                [
                  Fn::Sub: "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/da90619d-ebf1-43ae-903d-5035b8ff19e4",
                  Fn::Sub: "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/schedule-line-reminder/*",
                ]
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: false
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/calendar-events-handler.ts
        Banner:
          # モジュールの解決エラーを解決するために、esbuildのバナーにNode.jsのrequireを追加する
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);
  WebhookFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Description: LINEからのWebhookを処理するLambda関数
      Runtime: nodejs22.x
      Handler: app.lambdaHandler
      Architectures:
        - x86_64
      Events:
        Webhook:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: false
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/app.ts
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WebhookApi:
    Description: API Gateway endpoint URL for Prod stage for Webhook function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  WebhookFunction:
    Description: Webhook Lambda Function ARN
    Value: !GetAtt WebhookFunction.Arn
  WebhookFunctionIamRole:
    Description: Implicit IAM Role created for Webhook function
    Value: !GetAtt WebhookFunction.Arn
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
